import Image, { ImageProps } from "next/image";
import React from "react";
const CDN_PREFIX = process.env.NEXT_PUBLIC_CDN_URL || "";


/**
 * üåÑ MDXImageProps
 * 
 * Ez a t√≠pus a k√©pek MDX-komponens√©hez k√©sz√ºlt.
 * Az alap `ImageProps`-ot (amit a Next.js Image komponens haszn√°l) 
 * eg√©sz√≠tj√ºk ki k√©t extra mez≈ëvel:
 * 
 * - `srcLight` ‚Üí vil√°gos m√≥dhoz haszn√°lt k√©p
 * - `srcDark` ‚Üí s√∂t√©t m√≥dhoz haszn√°lt k√©p
 */
interface MDXImageProps extends Partial<ImageProps> {
  srcLight?: string;
  srcDark?: string;
};

/**
 * üßæ StaticLike t√≠pus
 * 
 * Ez a t√≠pus azt √≠rja le, milyen form√°ban √©rkezhet hozz√°nk a k√©p.
 * A k√©p lehet:
 * - egyszer≈± URL (string)
 * - vagy import√°lt statikus k√©p (pl. import img from "./kep.png")
 *   ‚Äî ilyen esetben az `img.default.src` vagy `img.src` mez≈ëben van az URL.
 */
type StaticLike =
  | string
  | {
    default?: { src?: string };
    src?: string;
  };



/**
* ü™Ñ normalizeSrc
* 
* Ez a seg√©df√ºggv√©ny b√°rmilyen k√©pform√°tumb√≥l el≈ë√°ll√≠t egy
* **megb√≠zhat√≥, haszn√°lhat√≥ URL-t**, amit a <Image> komponens meg√©rt.
* 
* üß≠ L√©p√©sek:
* 1. Ha nincs semmi, √ºres stringet ad vissza
* 2. Ha sima URL (string), akkor:
*    - ha `http`-val kezd≈ëdik ‚Üí sim√°n visszaadjuk
*    - ha nem ‚Üí hozz√°f≈±zz√ºk a `CDN_PREFIX`-et (CDN-es el√©r√©shez)
* 3. Ha `default.src` mez≈ë van ‚Üí azt haszn√°ljuk
* 4. Ha `src` mez≈ë van ‚Üí azt haszn√°ljuk
*/
function normalizeSrc(src?: StaticLike): string {
  if (!src) return "";
  if (typeof src === "string") {
    if (src.startsWith("http")) return src;
    return `${CDN_PREFIX}${src}`;
  }
  // ha default-ban van
  if (src.default && src.default.src) return src.default.src;
  // ha sima StaticImport
  if (src.src) return src.src;
  return "";
};


/**
 * üñºÔ∏è mdxComponents
 * 
 * Ez az objektum tartalmazza azokat a React komponenseket,
 * amelyeket MDX f√°jlokban k√∂zvetlen√ºl haszn√°lhatunk.
 * 
 * P√©lda MDX f√°jlban:
 * ```mdx
 * # K√©p p√©lda
 * <Image src="/hero.png" alt="Hero k√©p" />
 * ```
 * 
 * üß≠ Hogyan m≈±k√∂dik:
 * - Az MDX f√°jlban haszn√°lt `<Image>` hivatkoz√°s **erre a komponensre mutat**.
 * - A komponens eld√∂nti, hogy `srcLight` vagy `srcDark` k√©pet haszn√°ljon.
 * - A `normalizeSrc` seg√≠ts√©g√©vel mindig helyes URL-t √°ll√≠t el≈ë.
 * - A Next.js `<Image>` komponens gondoskodik az optimaliz√°l√°sr√≥l.
 */
export const mdxComponents: Record<
  string,
  React.ComponentType<{ children?: React.ReactNode } | MDXImageProps>
> = {
  Image: (props: MDXImageProps) => {
    const { alt, srcLight, srcDark, width, height, ...rest } = props;
    const resolvedSrc = normalizeSrc(srcLight || props.src);
    const resolvedDark = normalizeSrc(srcDark);

    return (
      <div className="my-4">
        <Image
          alt={alt ?? ""}
          src={(resolvedDark || resolvedSrc || "") as string}
          width={Number(width) || 800}
          height={Number(height) || 600}
          className="rounded-lg shadow-sm"
          {...rest}
        />
      </div>
    );
  },
};